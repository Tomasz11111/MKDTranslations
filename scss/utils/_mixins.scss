// Media queries

@mixin mobile {
	@media all and(max-width: #{$mobile-max}) {
		@content;
			}
}
@mixin iphone5 {
	@media all and(max-width: #{$iphone5-max-vertical}) {
		@content;
		
		}
}
@mixin iphone5-landscape {
	@media all and(max-width: #{$iphone5-max}) and (orientation: landscape) {
		@content
			}
}
@mixin mobile-landscape {
	@media all and(max-width: #{$mobile-max}) and (orientation: landscape) {
		@content;
	}
}

@mixin tablet {
	@media all and (min-width: #{$tablet}) {
		@content;
			}
}
@mixin tablet-only {
	@media all and (min-width: #{$tablet}) and (max-width: (#{$medium} - 1)) {
		@content;
	}
}

@mixin medium-device {
	@media all and (min-width: #{$medium}) {
		@content;
	}
}
@mixin medium-only {
	@media all and(min-width: #{$medium}) and (max-width: (#{$large} -1)) {
		@content;
	}
}
@mixin medium-device-portrait {
	@media all and (min-width:#{$medium}) and (orientation: portrait) {
		@content;
	}
}
@mixin large {
	@media all and (min-width: #{$large}) {
		@content;
	}
}


@mixin large-screen {
	@media all and (min-width: #{$large-screen}) {
		@content;
			}
}

//Background images src 

@mixin bg-img($image) {
	background-image: url('#{$path-img}/#{$image}');
	background-repeat: no-repeat;
}

// font sizes

@function type-scale($level) {
  @return map-get($type-scale, $level);
}
@function type-scale--mobile($level) {
	@return map-get($type-scale--mobile, $level);
}
@function type-scale--tablet-only($level) {
	@return map-get($type-scale--mobile, $level);
}

@mixin font-size($level) {
	
	@include mobile {
		font-size: type-scale--mobile($level);
	}
	@include tablet {
		font-size: type-scale($level);
	}
	@include medium-device {
		font-size: type-scale($level);
	}
	@include large {
		font-size: type-scale($level);
	}
	
	
}

// BEM mixins

@mixin e($element) {
	&__#{$element} {
        @content;
    }
}

/// Block Modifier
/// @param {String} $modifier - Modifier's name
@mixin m($modifier) {
    &--#{$modifier} {
        @content;
    }
}


